AWSTemplateFormatVersion: '2010-09-09'
Description: Builds a CI/CD Pipeline to deploy a configurable CloudFormation or SAM Stack.
## code pipeline
Parameters:
# Product Parameters
  pProduct:
    Type: String
    Description: Product Name
    Default: ""
  pTeam:
    Type: String
    Description: Team Name
    Default: "teamA"

### Pipeline Configuration: 

  pBranchName:
    Type: String
    Description: Branch Name to Deploy
    Default: main  

# Deploy Targets: Dev / Test / PreProd / Prod
  pDeployIntoDev: # Deploy Target: Dev
    Type: String
    AllowedValues:
      - 'Yes'
      - 'No'
    Default: 'Yes'
    Description: Deploy into the Dev account
  
  pDeployIntoProd: # Deploy Target: Prod
    Type: String
    AllowedValues:
      - 'Yes'
      - 'No'
    Default: 'Yes'
    Description: Deploy into the Prod account


# Approvals Before: Test / PreProd / Prod
  
  pApprovalIntoProd: # Require Approval before Prod
    Type: String
    AllowedValues:
      - 'Yes'
      - 'No'
    Default: 'Yes'
    Description: Require Approval before Prod

# Template Path: 
  pTemplatePath: 
    Type: String
    Default: 'app/cloudformation.yml'
    Description: Path to the template to deploy from the source or build artifact
 
# Optional Configuration File for Dev
  pConfigurationPathDev: 
    Type: String
    Default: 'app/config/configuration-dev.json'
    Description: (Optional) CloudFormation Configuration file for Dev
 
# Optional Configuration File for Prod
  pConfigurationPathProd: 
    Type: String
    Default: 'app/config/configuration-prod.json'
    Description: (Optional) CloudFormation Configuration file for Prod

# Build Project: Yes / No
  pUseCodeBuildProject: 
    Type: String
    AllowedValues:
      - 'Yes'
      - 'No'
    Default: 'No'
    Description: Create a CodeBuild project, a build action, and use build artifacts
# Buildspec Path:
  pBuildspecPath: 
    Type: String
    Default: 'cicd/buildspec.yml'
    Description: Path to the buildspec file for the (optional) CodeBuild project 

### SSM Parameters
  SharedAcc:
    Type: String
    #Type: 'AWS::SSM::Parameter::Value<String>'
    #Default: '/accounts/SharedServices/Prod/id'
  pDevAccountNumber:
    Type: AWS::SSM::Parameter::Value<String>
  
  # pProdAccountNumber:
  #   Type: 'AWS::SSM::Parameter::Value<String>'
  #   Default: '/accounts/prod/id'
  pDeplAccountNumber:
    Type: 'AWS::SSM::Parameter::Value<String>'
  Region:
    Type: String
    #Type: 'AWS::SSM::Parameter::Value<String>'
    #Default: '/pipelinefactory/codepipeline/region1/name'
    Default: 'us-east-1'
  pRegion1CodePipelineKmsKey:
    Type: String
    #Type: 'AWS::SSM::Parameter::Value<String>'
    Default: '/pipelinefactory/codepipeline/region1/kmskeyarn'
  pRegion1CodePipelineArtifactBucket:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: '/pipelinefactory/codepipeline/region1/s3bucket'
  pCodePipelineServiceRole:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: '/pipelinefactory/codepipeline/iam/service'
  pCodePipelineActionRole:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: '/pipelinefactory/codepipeline/iam/action'
  pCodeBuildRole:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: '/pipelinefactory/codebuild/iam'
  pMainRegion:
    Type: String
    Description: Main Region for Infrastructure
    Default: 'us-east-1'

Conditions:
  cIsMainRegion: !Equals [!Ref AWS::Region, !Ref pMainRegion]
  cDeployToDev: !And
    - !Not [ !Equals  [!Ref pDevAccountNumber, 'null']]
    - !Equals [!Ref pDeployIntoDev, 'Yes' ]
  cDeployToProd: !And
    - !Not [ !Equals  [!Ref pProdAccountNumber, 'null']]
    - !Equals [!Ref pDeployIntoProd, 'Yes' ]
  cApprovalIntoProd: !And
    - Condition: cDeployToProd
    - !Equals [!Ref pApprovalIntoProd, 'Yes' ]
  cUseConfigurationDev: !Not [ !Equals [!Ref pConfigurationPathDev, '' ]]
  cUseConfigurationProd: !Not [ !Equals [!Ref pConfigurationPathProd, '' ]]
  cUseCodeBuildProject: !Equals [!Ref pUseCodeBuildProject, 'Yes' ]

Resources:
    # ------------
  # CodeBuild
  # ------------
  rCodeBuildProject:
    Type: AWS::CodeBuild::Project
    Condition: cUseCodeBuildProject
    Properties:
      Name: !Sub ${pProduct}-${pTeam}-CI-${pBranchName}
      Description: This project will be used for Continuous Integration
      ServiceRole: !Ref pCodeBuildRole
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:5.0
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: TEMPLATE_BUCKET
            Value: !Ref pRegion1CodePipelineArtifactBucket
          - Name: TEMPLATE_PREFIX
            Value: codebuild
          # - Name: KMS_ARN
          #   Value: !Ref pRegion1CodePipelineKmsKey
          - Name: TEMPLATE_PATH
            Value: !Ref pTemplatePath
      Source:
        Type: CODEPIPELINE
        BuildSpec: !Ref pBuildspecPath
      TimeoutInMinutes: 10
      # EncryptionKey: !Ref pRegion1CodePipelineKmsKey

  rScanCodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${pProduct}-template-scan-${pBranchName}
      Description: CodeBuild Stage to Scan Created Templates
      ServiceRole: !Ref pCodeBuildRole
      Artifacts:
          Type: CODEPIPELINE
      Environment:
          Type: LINUX_CONTAINER
          ComputeType: BUILD_GENERAL1_SMALL
          Image: aws/codebuild/standard:5.0
          PrivilegedMode: true  
      Source:
        Type: CODEPIPELINE
        BuildSpec: 'cicd/scan_buildspec.yml'
      TimeoutInMinutes: 10
      # EncryptionKey: !Ref pRegion1CodePipelineKmsKey

  rCodeBuildLambdaCodeProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${pProduct}-build-LambdaCode-${pBranchName}
      Description: This project will be used for Deploying the Lambda Code for RabbitMQ
      ServiceRole: !Ref pCodeBuildRole
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:5.0
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: CODE_BUCKET_R1
            Value: !Ref pRegion1CodePipelineArtifactBucket
          - Name: BUCKET_PREFIX
            Value: !Ref pProduct
      Source:
        Type: CODEPIPELINE
        BuildSpec: cicd/lambdabuildspec.yml
      TimeoutInMinutes: 10
      # EncryptionKey: !Ref pRegion1CodePipelineKmsKey
      ResourceAccessRole: !Ref pCodeBuildRole
  # --------------
  # CodePipeline
  # --------------
  rCodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RestartExecutionOnUpdate: True
      ArtifactStores:
        - Region: !Ref Region
          ArtifactStore:
            EncryptionKey:
              Id: !Ref pRegion1CodePipelineKmsKey
              Type: KMS
            Location: !Ref pRegion1CodePipelineArtifactBucket
            Type: S3
        
      Name: !Sub ${pProduct}-${pTeam}-${pBranchName}
      RoleArn: !Sub arn:aws:iam::${pDeplAccountNumber}:role/${pCodePipelineServiceRole}
      Stages:
        - Name: Source
          Actions:
            - Name: TemplateSource
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeCommit
                Version: "1"
              Configuration:
                BranchName: !Ref pBranchName
                RepositoryName: !Ref pProduct
                PollForSourceChanges: false
              OutputArtifacts:
                - Name: Source
              RunOrder: 1
        - Name: BuildAndPackage
          Actions:
            - Name: Update-CodePipeline
              ActionTypeId:
                Category: Invoke
                Owner: AWS
                Provider: Lambda
                Version: "1"
              Configuration:
                FunctionName: ScanUpdateCodePipeline
                UserParameters: |
                  {
                    "cfn_template": "cicd/codepipeline.yml",
                    "cfn_parameter": "cicd/pipeline_parameters.json"
                  }
              InputArtifacts:
                - Name: Source
              RoleArn: !Sub arn:aws:iam::${SharedAcc}:role/Shared-Lambda-Action
              RunOrder: 1
            - !If #cUseCodeBuildProject
                - cUseCodeBuildProject
                - Name: CodeBuild_Project
                  ActionTypeId:
                    Category: Build
                    Owner: AWS
                    Provider: CodeBuild
                    Version: "1"
                  Configuration:
                    ProjectName: !Ref rCodeBuildProject
                  InputArtifacts:
                    - Name: Source
                  OutputArtifacts:
                    - Name: Build
                  RunOrder: 2                  
                - !Ref AWS::NoValue
            - Name: Get_Pipeline_Artifacts
              ActionTypeId:
                Category: Invoke
                Owner: AWS
                Provider: Lambda
                Version: "1"
              Configuration:
                FunctionName: GetPipelineArtifacts
                UserParameters: !Sub |
                  {
                    "dest_account": "${pDeplAccountNumber}"
                  }
              InputArtifacts:
                - Name: Source
              RoleArn: !Sub arn:aws:iam::${SharedAcc}:role/Shared-Lambda-Action
              RunOrder: 1

            - Name: CodeBuild-ZipUploadCode
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Configuration:
                ProjectName: !Ref rCodeBuildLambdaCodeProject
              InputArtifacts:
                - Name: Source
              OutputArtifacts:
                - Name: Build-LambdaCode
              RunOrder: 2
        - !If # Deployment into Dev
          - cDeployToDev
          - Name: !Sub ${pTeam}-Dev
            Actions:
              - Name: !Sub Deploy_Dev-${Region}
                ActionTypeId:
                  Category: Deploy
                  Owner: AWS
                  Provider: CloudFormation
                  Version: "1"
                Configuration:
                  ActionMode: CREATE_UPDATE
                  Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                  RoleArn: !Sub arn:aws:iam::${pDevAccountNumber}:role/${pCodePipelineActionRole}
                  StackName: !Sub ${pProduct}-${pTeam}
                  ParameterOverrides: !Sub |
                    {
                      "pEnvironment": "dev",
                      "pProduct": "${pProduct}",
                      "pMainRegion": "${Region}",
                      "pLambdaCodeBucket": "${pRegion1CodePipelineArtifactBucket}",
                      "pObjectVersion": {"Fn::GetParam":["Build-LambdaCode","output.json","oObjectVersionR1"]}                  
                    }
                  TemplatePath: !If
                    - cUseCodeBuildProject
                    - !Sub Build::${pTemplatePath}
                    - !Sub Source::${pTemplatePath}
                  TemplateConfiguration: !If
                    - cUseConfigurationDev
                    - !If
                      - cUseCodeBuildProject
                      - !Sub Build::${pConfigurationPathDev}
                      - !Sub Source::${pConfigurationPathDev}
                    - !Ref AWS::NoValue
                  OutputFileName: Outputs-Dev-R1.json
                InputArtifacts: !If
                  - cUseCodeBuildProject # Include Build Artifact if using a build project
                  - - Name: Source
                    - Name: Build
                    - Name: Build-LambdaCode
                  - - Name: Source
                    - Name: Build-LambdaCode
                OutputArtifacts:
                  - Name: Outputs-Dev-R1
                RoleArn: !Sub arn:aws:iam::${pDevAccountNumber}:role/${pCodePipelineActionRole}
                Region: !Ref Region
                RunOrder: 1
              
          - !Ref AWS::NoValue
  
        - !If # Approval before deployment into Prod
          - cApprovalIntoProd 
          - Name: !Sub ${pTeam}-Prod_Approval
            Actions:
              - Name: ProdApproval
                ActionTypeId:
                  Category: Approval
                  Owner: AWS
                  Provider: Manual
                  Version: "1"
                Configuration:
                  NotificationArn: !Sub arn:aws:sns:${Region}:${SharedAcc}:DeliveryPipelineManualApproval
                  CustomData: !Sub |
                    {
                      "PipelineAccount": ${pDeplAccountNumber}
                    }
                RoleArn: !Sub arn:aws:iam::${SharedAcc}:role/Shared-Lambda-Action
                RunOrder: 1
          - !Ref AWS::NoValue
        - !If # Deployment into Prod
          - cDeployToProd
          - Name: !Sub ${pTeam}-Prod
            Actions:
              - Name: !Sub Deploy_Prod-${Region}
                ActionTypeId:
                  Category: Deploy
                  Owner: AWS
                  Provider: CloudFormation
                  Version: "1"
                Configuration:
                  ActionMode: CREATE_UPDATE
                  Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                  RoleArn: !Sub arn:aws:iam::${pProdAccountNumber}:role/${pCodePipelineActionRole}
                  StackName: !Sub ${pProduct}-${pTeam}
                  ParameterOverrides: !Sub |
                    {
                      "pProduct": "${pProduct}",
                      "pEnvironment": "prod",
                      "pMainRegion": "${Region}",
                      "pLambdaCodeBucket": "${pRegion1CodePipelineArtifactBucket}",
                      "pObjectVersion": {"Fn::GetParam":["Build-LambdaCode","output.json","oObjectVersionR1"]}  
                    }
                  TemplatePath: !If
                    - cUseCodeBuildProject
                    - !Sub Build::${pTemplatePath}
                    - !Sub Source::${pTemplatePath}
                  TemplateConfiguration: !If
                    - cUseConfigurationProd
                    - !If
                      - cUseCodeBuildProject
                      - !Sub Build::${pConfigurationPathProd}
                      - !Sub Source::${pConfigurationPathProd}
                    - !Ref AWS::NoValue
                  OutputFileName: Outputs-Prod.json
                InputArtifacts: !If
                  - cUseCodeBuildProject # Include Build Artifact if using a build project
                  - - Name: Source
                    - Name: Build
                    - Name: Build-LambdaCode
                  - - Name: Source
                    - Name: Build-LambdaCode
                OutputArtifacts:
                  - Name: Outputs-Prod
                RoleArn: !Sub arn:aws:iam::${pProdAccountNumber}:role/${pCodePipelineActionRole}
                Region: !Ref Region
                RunOrder: 1
          - !Ref AWS::NoValue

  # -------------------------------------------
  # CloudWatch Event
  # -------------------------------------------
  rInitiatePipelineEvent:
    Type: AWS::Events::Rule
    Properties:
      Description: 'Amazon CloudWatch Events rule to automatically start your pipeline when a change occurs to a CodeCommit Repository'
      EventPattern:
        source:
          - aws.codecommit
        detail-type:
          - "CodeCommit Repository State Change"
        resources:
          - !Sub arn:aws:codecommit:${Region}:${AWS::AccountId}:${pProduct}
        detail:
          referenceType:
            - branch
          referenceName:
            - !Ref pBranchName
      Name: !Sub ${pProduct}-${pTeam}-f-${pBranchName}
      State: "ENABLED"
      Targets:
        - RoleArn: !Sub arn:aws:iam::${AWS::AccountId}:role/CodePipeline-Service
          Arn: !Sub arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${rCodePipeline}
          Id: !Sub "${pProduct}_Initial_CodePipeline_V1"   
