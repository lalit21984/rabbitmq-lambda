AWSTemplateFormatVersion: '2010-09-09'
Description: Builds a CI/CD Pipeline to deploy a configurable CloudFormation or SAM Stack.
## code pipeline for SLS
Parameters:
# Product Parameters
  pProduct:
    Type: String
    Description: Product Name
    Default: ""
  pTeam:
    Type: String
    Description: Team Name
    Default: "teamA"

### Pipeline Configuration: 

  pBranchName:
    Type: String
    Description: Branch Name to Deploy
    Default: main  

# Deploy Targets: Dev / Test / PreProd / Prod
  pDeployIntoDev: # Deploy Target: Dev
    Type: String
    AllowedValues:
      - 'Yes'
      - 'No'
    Default: 'Yes'
    Description: Deploy into the Dev account
  # pDeployIntoTest: # Deploy Target: Test
  #   Type: String
  #   AllowedValues:
  #     - 'Yes'
  #     - 'No'
  #   Default: 'Yes'
  #   Description: Deploy into the Test account
  pDeployIntoPreProd: # Deploy Target: PreProd
    Type: String
    AllowedValues:
      - 'Yes'
      - 'No'
    Default: 'Yes'
    Description: Deploy into the PreProd account
  # pDeployIntoProd: # Deploy Target: Prod
  #   Type: String
  #   AllowedValues:
  #     - 'Yes'
  #     - 'No'
    # Default: 'Yes'
    # Description: Deploy into the Prod account
  # pRegion2Active:
  #   Type: String
  #   Description: Deploy instances into secondary region
  #   Default: 'No'

# Approvals Before: Test / PreProd / Prod
  # pApprovalIntoTest: # Require Approval before Test
  #   Type: String
  #   AllowedValues:
  #     - 'Yes'
  #     - 'No'
  #   Default: 'Yes'
  #   Description: Require Approval before Test
  # pApprovalIntoPreProd: # Require Approval before PreProd
  #   Type: String
  #   AllowedValues:
  #     - 'Yes'
  #     - 'No'
  #   Default: 'Yes'
  #   Description: Require Approval before PreProd
  # pApprovalIntoProd: # Require Approval before Prod
  #   Type: String
  #   AllowedValues:
  #     - 'Yes'
  #     - 'No'
  #   Default: 'Yes'
  #   Description: Require Approval before Prod

# Template Path: 
  pTemplatePath: 
    Type: String
    Default: 'app/cloudformation.yml'
    Description: Path to the template to deploy from the source or build artifact
  # pTemplatePathRegion2: 
  #   Type: String
  #   Default: 'app/cloudformation.yml'
  #   Description: Path to the template to deploy from the source or build artifact
 
# Optional Configuration File for Dev
  pConfigurationPathDev: 
    Type: String
    Default: 'app/config/configuration-dev.json'
    Description: (Optional) CloudFormation Configuration file for Dev
  # pConfigurationPathDevR2: 
  #   Type: String
  #   Default: 'app/config/configuration-dev-r2.json'
  #   Description: (Optional) CloudFormation Configuration file for Dev
# Optional Configuration File for Test
  # pConfigurationPathTest: 
  #   Type: String
  #   Default: 'app/config/configuration-test.json'
  #   Description: (Optional) CloudFormation Configuration file for Test
  # pConfigurationPathTestR2: 
  #   Type: String
  #   Default: 'app/config/configuration-test-r2.json'
  #   Description: (Optional) CloudFormation Configuration file for Test
# Optional Configuration File for PreProd
#   pConfigurationPathPreProd: 
#     Type: String
#     Default: 'app/config/configuration-preprod.json'
#     Description: (Optional) CloudFormation Configuration file for PreProd
#   pConfigurationPathPreProdR2: 
#     Type: String
#     Default: 'app/config/configuration-preprod-r2.json'
#     Description: (Optional) CloudFormation Configuration file for PreProd
# # Optional Configuration File for Prod
#   pConfigurationPathProd: 
#     Type: String
#     Default: 'app/config/configuration-prod.json'
#     Description: (Optional) CloudFormation Configuration file for Prod
#   pConfigurationPathProdR2: 
#     Type: String
#     Default: 'app/config/configuration-prod-r2.json'
#     Description: (Optional) CloudFormation Configuration file for Prod

# Build Project: Yes / No
  pUseCodeBuildProject: 
    Type: String
    AllowedValues:
      - 'Yes'
      - 'No'
    Default: 'No'
    Description: Create a CodeBuild project, a build action, and use build artifacts
# Buildspec Path:
  pBuildspecPath: 
    Type: String
    Default: 'cicd/buildspec.yml'
    Description: Path to the buildspec file for the (optional) CodeBuild project 

### SSM Parameters
  pSharedProdAccountNumber:
    Type: String
    #Type: 'AWS::SSM::Parameter::Value<String>'
    #Default: '/accounts/SharedServices/Prod/id'
  pDevAccountNumber:
    Type: AWS::SSM::Parameter::Value<String>
  # pTestAccountNumber:
  #   Type: AWS::SSM::Parameter::Value<String>
  #   Default: '/accounts/test/id'
  # pPreProdAccountNumber:
  #   Type: AWS::SSM::Parameter::Value<String>
  #   Default: '/accounts/preprod/id'
  # pProdAccountNumber:
  #   Type: 'AWS::SSM::Parameter::Value<String>'
  #   Default: '/accounts/prod/id'
  pDeplAccountNumber:
    Type: 'AWS::SSM::Parameter::Value<String>'
  pRegion1Name:
    Type: String
    #Type: 'AWS::SSM::Parameter::Value<String>'
    #Default: '/pipelinefactory/codepipeline/region1/name'
    Default: 'us-east-1'
  pRegion1CodePipelineKmsKey:
    Type: String
    #Type: 'AWS::SSM::Parameter::Value<String>'
    Default: '/pipelinefactory/codepipeline/region1/kmskeyarn'
  pRegion1CodePipelineArtifactBucket:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: '/pipelinefactory/codepipeline/region1/s3bucket'
  pRegion2Name:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: '/pipelinefactory/codepipeline/region2/name'
  pRegion2CodePipelineKmsKey:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: '/pipelinefactory/codepipeline/region2/kmskeyarn'
  pRegion2CodePipelineArtifactBucket:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: '/pipelinefactory/codepipeline/region2/s3bucket'
  pCodePipelineServiceRole:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: '/pipelinefactory/codepipeline/iam/service'
  pCodePipelineActionRole:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: '/pipelinefactory/codepipeline/iam/action'
  pCodeBuildRole:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: '/pipelinefactory/codebuild/iam'
  pMainRegion:
    Type: String
    Description: Main Region for Infrastructure
    Default: 'us-east-1'

Conditions:
  cIsMainRegion: !Equals [!Ref AWS::Region, !Ref pMainRegion]
  cIsR2: !Not [!Condition cIsMainRegion]

  cDeployToDev: !And
    - !Not [ !Equals  [!Ref pDevAccountNumber, 'null']]
    - !Equals [!Ref pDeployIntoDev, 'Yes' ]
  # cDeployToTest: !And
  #   - !Not [ !Equals  [!Ref pTestAccountNumber, 'null']]
  #   - !Equals [!Ref pDeployIntoTest, 'Yes' ]
  cDeployToPreProd: !And
    - !Not [ !Equals  [!Ref pPreProdAccountNumber, 'null']]
    - !Equals [!Ref pDeployIntoPreProd, 'Yes' ]
  cDeployToProd: !And
    - !Not [ !Equals  [!Ref pProdAccountNumber, 'null']]
    - !Equals [!Ref pDeployIntoProd, 'Yes' ]
  # cApprovalIntoTest: !And
  #   - Condition: cDeployToTest
  #   - !Equals [!Ref pApprovalIntoTest, 'Yes' ]
  cApprovalIntoPreProd: !And
    - Condition: cDeployToPreProd
    - !Equals [!Ref pApprovalIntoPreProd, 'Yes' ]
  cApprovalIntoProd: !And
    - Condition: cDeployToProd
    - !Equals [!Ref pApprovalIntoProd, 'Yes' ]
  cUseConfigurationDev: !Not [ !Equals [!Ref pConfigurationPathDev, '' ]]
  # cUseConfigurationTest: !Not [ !Equals [!Ref pConfigurationPathTest, '' ]]
  cUseConfigurationPreProd: !Not [ !Equals [!Ref pConfigurationPathPreProd, '' ]]
  cUseConfigurationProd: !Not [ !Equals [!Ref pConfigurationPathProd, '' ]]
  cUseCodeBuildProject: !Equals [!Ref pUseCodeBuildProject, 'Yes' ]

Resources:
    # ------------
  # CodeBuild
  # ------------
  rCodeBuildProject:
    Type: AWS::CodeBuild::Project
    Condition: cUseCodeBuildProject
    Properties:
      Name: !Sub ${pProduct}-${pTeam}-CI-${pBranchName}
      Description: This project will be used for Continuous Integration
      ServiceRole: !Ref pCodeBuildRole
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:5.0
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: TEMPLATE_BUCKET
            Value: !Ref pRegion1CodePipelineArtifactBucket
          - Name: TEMPLATE_PREFIX
            Value: codebuild
          # - Name: KMS_ARN
          #   Value: !Ref pRegion1CodePipelineKmsKey
          - Name: TEMPLATE_PATH
            Value: !Ref pTemplatePath
      Source:
        Type: CODEPIPELINE
        BuildSpec: !Ref pBuildspecPath
      TimeoutInMinutes: 10
      # EncryptionKey: !Ref pRegion1CodePipelineKmsKey

  rScanCodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${pProduct}-template-scan-${pBranchName}
      Description: CodeBuild Stage to Scan Created Templates
      ServiceRole: !Ref pCodeBuildRole
      Artifacts:
          Type: CODEPIPELINE
      Environment:
          Type: LINUX_CONTAINER
          ComputeType: BUILD_GENERAL1_SMALL
          Image: aws/codebuild/standard:5.0
          PrivilegedMode: true  
      Source:
        Type: CODEPIPELINE
        BuildSpec: 'cicd/scan_buildspec.yml'
      TimeoutInMinutes: 10
      # EncryptionKey: !Ref pRegion1CodePipelineKmsKey

  rCodeBuildLambdaCodeProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${pProduct}-build-LambdaCode-${pBranchName}
      Description: This project will be used for Deploying the Lambda Code for RabbitMQ
      ServiceRole: !Ref pCodeBuildRole
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:5.0
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: CODE_BUCKET_R1
            Value: !Ref pRegion1CodePipelineArtifactBucket
          - Name: CODE_BUCKET_R2
            Value: !Ref pRegion2CodePipelineArtifactBucket
          - Name: BUCKET_PREFIX
            Value: !Ref pProduct
          # - Name: KMS_ARN_R1
          #   Value: !Ref pRegion1CodePipelineKmsKey
          # - Name: KMS_ARN_R2
          #   Value: !Ref pRegion2CodePipelineKmsKey
      Source:
        Type: CODEPIPELINE
        BuildSpec: cicd/lambdabuildspec.yml
      TimeoutInMinutes: 10
      # EncryptionKey: !Ref pRegion1CodePipelineKmsKey
      ResourceAccessRole: !Ref pCodeBuildRole
  # --------------
  # CodePipeline
  # --------------
  rCodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RestartExecutionOnUpdate: True
      ArtifactStores:
        - Region: !Ref pRegion1Name
          ArtifactStore:
            EncryptionKey:
              Id: !Ref pRegion1CodePipelineKmsKey
              Type: KMS
            Location: !Ref pRegion1CodePipelineArtifactBucket
            Type: S3
        - Region: !Ref pRegion2Name
          ArtifactStore:
            EncryptionKey:
              Id: !Ref pRegion2CodePipelineKmsKey
              Type: KMS
            Location: !Ref pRegion2CodePipelineArtifactBucket
            Type: S3
      Name: !Sub ${pProduct}-${pTeam}-${pBranchName}
      RoleArn: !Sub arn:aws:iam::${pDeplAccountNumber}:role/${pCodePipelineServiceRole}
      Stages:
        - Name: Source
          Actions:
            - Name: TemplateSource
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeCommit
                Version: "1"
              Configuration:
                BranchName: !Ref pBranchName
                RepositoryName: !Ref pProduct
                PollForSourceChanges: false
              OutputArtifacts:
                - Name: Source
              RunOrder: 1
        - Name: BuildAndPackage
          Actions:
            - Name: Update-CodePipeline
              ActionTypeId:
                Category: Invoke
                Owner: AWS
                Provider: Lambda
                Version: "1"
              Configuration:
                FunctionName: ScanUpdateCodePipeline
                UserParameters: |
                  {
                    "cfn_template": "cicd/codepipeline.yml",
                    "cfn_parameter": "cicd/pipeline_parameters.json"
                  }
              InputArtifacts:
                - Name: Source
              RoleArn: !Sub arn:aws:iam::${pSharedProdAccountNumber}:role/Shared-Lambda-Action
              RunOrder: 1
            - !If #cUseCodeBuildProject
                - cUseCodeBuildProject
                - Name: CodeBuild_Project
                  ActionTypeId:
                    Category: Build
                    Owner: AWS
                    Provider: CodeBuild
                    Version: "1"
                  Configuration:
                    ProjectName: !Ref rCodeBuildProject
                  InputArtifacts:
                    - Name: Source
                  OutputArtifacts:
                    - Name: Build
                  RunOrder: 2                  
                - !Ref AWS::NoValue
            - Name: Get_Pipeline_Artifacts
              ActionTypeId:
                Category: Invoke
                Owner: AWS
                Provider: Lambda
                Version: "1"
              Configuration:
                FunctionName: GetPipelineArtifacts
                UserParameters: !Sub |
                  {
                    "dest_account": "${pDeplAccountNumber}"
                  }
              InputArtifacts:
                - Name: Source
              RoleArn: !Sub arn:aws:iam::${pSharedProdAccountNumber}:role/Shared-Lambda-Action
              RunOrder: 1

            - Name: CodeBuild-ZipUploadCode
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Configuration:
                ProjectName: !Ref rCodeBuildLambdaCodeProject
              InputArtifacts:
                - Name: Source
              OutputArtifacts:
                - Name: Build-LambdaCode
              RunOrder: 2
            
            # - Name: Scan_CodeBuild_Project
            #   ActionTypeId:
            #     Category: Build
            #     Owner: AWS
            #     Provider: CodeBuild
            #     Version: "1"
            #   Configuration:
            #     ProjectName: !Ref rScanCodeBuildProject
            #   InputArtifacts:
            #     - Name: Source
            #   OutputArtifacts:
            #     - Name: Scan-Build
            #   RunOrder: 1
        - !If # Deployment into Dev
          - cDeployToDev
          - Name: !Sub ${pTeam}-Dev
            Actions:
              - Name: !Sub Deploy_Dev-${pRegion1Name}
                ActionTypeId:
                  Category: Deploy
                  Owner: AWS
                  Provider: CloudFormation
                  Version: "1"
                Configuration:
                  ActionMode: CREATE_UPDATE
                  Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                  RoleArn: !Sub arn:aws:iam::${pDevAccountNumber}:role/${pCodePipelineActionRole}
                  StackName: !Sub ${pProduct}-${pTeam}
                  ParameterOverrides: !Sub |
                    {
                      "pEnvironment": "dev",
                      "pProduct": "${pProduct}",
                      "pMainRegion": "${pRegion1Name}",
                      "pRegion2Active": "${pRegion2Active}",
                      "pLambdaCodeBucket": "${pRegion1CodePipelineArtifactBucket}",
                      "pObjectVersion": {"Fn::GetParam":["Build-LambdaCode","output.json","oObjectVersionR1"]}                  
                    }
                  TemplatePath: !If
                    - cUseCodeBuildProject
                    - !Sub Build::${pTemplatePath}
                    - !Sub Source::${pTemplatePath}
                  TemplateConfiguration: !If
                    - cUseConfigurationDev
                    - !If
                      - cUseCodeBuildProject
                      - !Sub Build::${pConfigurationPathDev}
                      - !Sub Source::${pConfigurationPathDev}
                    - !Ref AWS::NoValue
                  OutputFileName: Outputs-Dev-R1.json
                InputArtifacts: !If
                  - cUseCodeBuildProject # Include Build Artifact if using a build project
                  - - Name: Source
                    - Name: Build
                    - Name: Build-LambdaCode
                  - - Name: Source
                    - Name: Build-LambdaCode
                OutputArtifacts:
                  - Name: Outputs-Dev-R1
                RoleArn: !Sub arn:aws:iam::${pDevAccountNumber}:role/${pCodePipelineActionRole}
                Region: !Ref pRegion1Name
                RunOrder: 1
              # - Name: !Sub Deploy_Dev-${pRegion2Name}
              #   ActionTypeId:
              #     Category: Deploy
              #     Owner: AWS
              #     Provider: CloudFormation
              #     Version: "1"
              #   Configuration:
              #     ActionMode: CREATE_UPDATE
              #     Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
              #     RoleArn: !Sub arn:aws:iam::${pDevAccountNumber}:role/${pCodePipelineActionRole}
              #     StackName: !Sub ${pProduct}-${pTeam}
              #     ParameterOverrides: !Sub |
              #       {
              #         "pEnvironment": "dev",
              #         "pProduct": "${pProduct}",
              #         "pMainRegion": "${pRegion1Name}",
              #         "pRegion2Active": "${pRegion2Active}"
              #       }
              #     TemplatePath: !If
              #       - cUseCodeBuildProject
              #       - !Sub Build::${pTemplatePath}
              #       - !Sub Source::${pTemplatePath}
              #     TemplateConfiguration: !If
              #       - cUseConfigurationDev
              #       - !If
              #         - cUseCodeBuildProject
              #         - !Sub Build::${pConfigurationPathDevR2}
              #         - !Sub Source::${pConfigurationPathDevR2}
              #       - !Ref AWS::NoValue
              #     OutputFileName: Outputs-Dev-r2.json
              #   InputArtifacts: !If
              #     - cUseCodeBuildProject # Include Build Artifact if using a build project
              #     - - Name: Source
              #       - Name: Build
              #     - - Name: Source
              #   OutputArtifacts:
              #     - Name: Outputs-Dev-R2
              #   RoleArn: !Sub arn:aws:iam::${pDevAccountNumber}:role/${pCodePipelineActionRole}
              #   Region: !Ref pRegion2Name
              #   RunOrder: 1
          - !Ref AWS::NoValue
  #       - !If # Approval before deployment into PreProd
  #         - cApprovalIntoPreProd 
  #         - Name: !Sub ${pTeam}-PreProd_Approval
  #           Actions:
  #             - Name: PreProdApproval
  #               ActionTypeId:
  #                 Category: Approval
  #                 Owner: AWS
  #                 Provider: Manual
  #                 Version: "1"
  #               Configuration:
  #                 NotificationArn: !Sub arn:aws:sns:${pRegion1Name}:${pSharedProdAccountNumber}:DeliveryPipelineManualApproval
  #                 CustomData: !Sub |
  #                   {
  #                     "PipelineAccount": ${pDeplAccountNumber}
  #                   }
  #               RoleArn: !Sub arn:aws:iam::${pSharedProdAccountNumber}:role/Shared-Lambda-Action
  #               RunOrder: 1
  #         - !Ref AWS::NoValue
  #       - !If # Deployment into PreProd
  #         - cDeployToPreProd
  #         - Name: !Sub ${pTeam}-PreProd
  #           Actions:
  #             - Name: !Sub Deploy_PreProd-${pRegion1Name}
  #               ActionTypeId:
  #                 Category: Deploy
  #                 Owner: AWS
  #                 Provider: CloudFormation
  #                 Version: "1"
  #               Configuration:
  #                 ActionMode: CREATE_UPDATE
  #                 Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
  #                 RoleArn: !Sub arn:aws:iam::${pPreProdAccountNumber}:role/${pCodePipelineActionRole}
  #                 StackName: !Sub ${pProduct}-${pTeam}
  #                 ParameterOverrides: !Sub |
  #                   {
  #                     "pProduct": "${pProduct}",
  #                     "pEnvironment": "preprod",
  #                     "pMainRegion": "${pRegion1Name}",
  #                     "pRegion2Active": "${pRegion2Active}",
  #                     "pLambdaCodeBucket": "${pRegion1CodePipelineArtifactBucket}",
  #                     "pObjectVersion": {"Fn::GetParam":["Build-LambdaCode","output.json","oObjectVersionR1"]}  
  #                   }
  #                 TemplatePath: !If
  #                   - cUseCodeBuildProject
  #                   - !Sub Build::${pTemplatePath}
  #                   - !Sub Source::${pTemplatePath}
  #                 TemplateConfiguration: !If
  #                   - cUseConfigurationPreProd
  #                   - !If
  #                     - cUseCodeBuildProject
  #                     - !Sub Build::${pConfigurationPathPreProd}
  #                     - !Sub Source::${pConfigurationPathPreProd}
  #                   - !Ref AWS::NoValue
  #                 OutputFileName: Outputs-PreProd.json
  #               InputArtifacts: !If
  #                 - cUseCodeBuildProject # Include Build Artifact if using a build project
  #                 - - Name: Source
  #                   - Name: Build
  #                   - Name: Build-LambdaCode
  #                 - - Name: Source
  #                   - Name: Build-LambdaCode
  #               OutputArtifacts:
  #                 - Name: Outputs-PreProd
  #               RoleArn: !Sub arn:aws:iam::${pPreProdAccountNumber}:role/${pCodePipelineActionRole}
  #               Region: !Ref pRegion1Name
  #               RunOrder: 1
  #             - Name: !Sub Deploy_PreProd-${pRegion2Name}
  #               ActionTypeId:
  #                 Category: Deploy
  #                 Owner: AWS
  #                 Provider: CloudFormation
  #                 Version: "1"
  #               Configuration:
  #                 ActionMode: CREATE_UPDATE
  #                 Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
  #                 RoleArn: !Sub arn:aws:iam::${pPreProdAccountNumber}:role/${pCodePipelineActionRole}
  #                 StackName: !Sub ${pProduct}-${pTeam}
  #                 ParameterOverrides: !Sub |
  #                   {
  #                     "pEnvironment": "preprod",
  #                     "pProduct": "${pProduct}",
  #                     "pMainRegion": "${pRegion1Name}",
  #                     "pRegion2Active": "${pRegion2Active}",
  #                     "pLambdaCodeBucket": "${pRegion2CodePipelineArtifactBucket}",
  #                     "pObjectVersion": {"Fn::GetParam":["Build-LambdaCode","output.json","oObjectVersionR2"]}
  #                   }
  #                 TemplatePath: !If
  #                   - cUseCodeBuildProject
  #                   - !Sub Build::${pTemplatePath}
  #                   - !Sub Source::${pTemplatePath}
  #                 TemplateConfiguration: !If
  #                   - cUseConfigurationPreProd
  #                   - !If
  #                     - cUseCodeBuildProject
  #                     - !Sub Build::${pConfigurationPathPreProdR2}
  #                     - !Sub Source::${pConfigurationPathPreProdR2}
  #                   - !Ref AWS::NoValue
  #                 OutputFileName: Outputs-PreProd-R2.json
  #               InputArtifacts: !If
  #                 - cUseCodeBuildProject # Include Build Artifact if using a build project
  #                 - - Name: Source
  #                   - Name: Build
  #                   - Name: Build-LambdaCode
  #                 - - Name: Source
  #                   - Name: Build-LambdaCode
  #               OutputArtifacts:
  #                 - Name: Outputs-PreProd-R2
  #               RoleArn: !Sub arn:aws:iam::${pPreProdAccountNumber}:role/${pCodePipelineActionRole}
  #               Region: !Ref pRegion2Name
  #               RunOrder: 1
  #         - !Ref AWS::NoValue
  #       - !If # Approval before deployment into Prod
  #         - cApprovalIntoProd 
  #         - Name: !Sub ${pTeam}-Prod_Approval
  #           Actions:
  #             - Name: ProdApproval
  #               ActionTypeId:
  #                 Category: Approval
  #                 Owner: AWS
  #                 Provider: Manual
  #                 Version: "1"
  #               Configuration:
  #                 NotificationArn: !Sub arn:aws:sns:${pRegion1Name}:${pSharedProdAccountNumber}:DeliveryPipelineManualApproval
  #                 CustomData: !Sub |
  #                   {
  #                     "PipelineAccount": ${pDeplAccountNumber}
  #                   }
  #               RoleArn: !Sub arn:aws:iam::${pSharedProdAccountNumber}:role/Shared-Lambda-Action
  #               RunOrder: 1
  #         - !Ref AWS::NoValue
  #       - !If # Deployment into Prod
  #         - cDeployToProd
  #         - Name: !Sub ${pTeam}-Prod
  #           Actions:
  #             - Name: !Sub Deploy_Prod-${pRegion1Name}
  #               ActionTypeId:
  #                 Category: Deploy
  #                 Owner: AWS
  #                 Provider: CloudFormation
  #                 Version: "1"
  #               Configuration:
  #                 ActionMode: CREATE_UPDATE
  #                 Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
  #                 RoleArn: !Sub arn:aws:iam::${pProdAccountNumber}:role/${pCodePipelineActionRole}
  #                 StackName: !Sub ${pProduct}-${pTeam}
  #                 ParameterOverrides: !Sub |
  #                   {
  #                     "pProduct": "${pProduct}",
  #                     "pEnvironment": "prod",
  #                     "pMainRegion": "${pRegion1Name}",
  #                     "pRegion2Active": "${pRegion2Active}",
  #                     "pLambdaCodeBucket": "${pRegion1CodePipelineArtifactBucket}",
  #                     "pObjectVersion": {"Fn::GetParam":["Build-LambdaCode","output.json","oObjectVersionR1"]}  
  #                   }
  #                 TemplatePath: !If
  #                   - cUseCodeBuildProject
  #                   - !Sub Build::${pTemplatePath}
  #                   - !Sub Source::${pTemplatePath}
  #                 TemplateConfiguration: !If
  #                   - cUseConfigurationProd
  #                   - !If
  #                     - cUseCodeBuildProject
  #                     - !Sub Build::${pConfigurationPathProd}
  #                     - !Sub Source::${pConfigurationPathProd}
  #                   - !Ref AWS::NoValue
  #                 OutputFileName: Outputs-Prod.json
  #               InputArtifacts: !If
  #                 - cUseCodeBuildProject # Include Build Artifact if using a build project
  #                 - - Name: Source
  #                   - Name: Build
  #                   - Name: Build-LambdaCode
  #                 - - Name: Source
  #                   - Name: Build-LambdaCode
  #               OutputArtifacts:
  #                 - Name: Outputs-Prod
  #               RoleArn: !Sub arn:aws:iam::${pProdAccountNumber}:role/${pCodePipelineActionRole}
  #               Region: !Ref pRegion1Name
  #               RunOrder: 1
  #             - Name: !Sub ${pTeam}-Prod-${pRegion2Name}
  #               ActionTypeId:
  #                 Category: Deploy
  #                 Owner: AWS
  #                 Provider: CloudFormation
  #                 Version: "1"
  #               Configuration:
  #                 ActionMode: CREATE_UPDATE
  #                 Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
  #                 RoleArn: !Sub arn:aws:iam::${pProdAccountNumber}:role/${pCodePipelineActionRole}
  #                 StackName: !Sub ${pProduct}-${pTeam}
  #                 ParameterOverrides: !Sub |
  #                   {
  #                     "pProduct": "${pProduct}",
  #                     "pEnvironment": "prod",
  #                     "pMainRegion": "${pRegion1Name}",
  #                     "pRegion2Active": "${pRegion2Active}",
  #                     "pLambdaCodeBucket": "${pRegion2CodePipelineArtifactBucket}",
  #                     "pObjectVersion": {"Fn::GetParam":["Build-LambdaCode","output.json","oObjectVersionR2"]}  
  #                   }
  #                 TemplatePath: !If
  #                   - cUseCodeBuildProject
  #                   - !Sub Build::${pTemplatePath}
  #                   - !Sub Source::${pTemplatePath}
  #                 TemplateConfiguration: !If
  #                   - cUseConfigurationProd
  #                   - !If
  #                     - cUseCodeBuildProject
  #                     - !Sub Build::${pConfigurationPathProdR2}
  #                     - !Sub Source::${pConfigurationPathProdR2}
  #                   - !Ref AWS::NoValue
  #                 OutputFileName: Outputs-Prod-R2.json
  #               InputArtifacts: !If
  #                 - cUseCodeBuildProject # Include Build Artifact if using a build project
  #                 - - Name: Source
  #                   - Name: Build
  #                   - Name: Build-LambdaCode
  #                 - - Name: Source
  #                   - Name: Build-LambdaCode
  #               OutputArtifacts:
  #                 - Name: Outputs-Prod-R2
  #               RoleArn: !Sub arn:aws:iam::${pProdAccountNumber}:role/${pCodePipelineActionRole}
  #               Region: !Ref pRegion2Name
  #               RunOrder: 1
  #         - !Ref AWS::NoValue

  # # -------------------------------------------
  # # CloudWatch Event
  # # -------------------------------------------
  # rInitiatePipelineEvent:
  #   Type: AWS::Events::Rule
  #   Properties:
  #     Description: 'Amazon CloudWatch Events rule to automatically start your pipeline when a change occurs to a CodeCommit Repository'
  #     EventPattern:
  #       source:
  #         - aws.codecommit
  #       detail-type:
  #         - "CodeCommit Repository State Change"
  #       resources:
  #         - !Sub arn:aws:codecommit:${pRegion1Name}:${AWS::AccountId}:${pProduct}
  #       detail:
  #         referenceType:
  #           - branch
  #         referenceName:
  #           - !Ref pBranchName
  #     Name: !Sub ${pProduct}-${pTeam}-f-${pBranchName}
  #     State: "ENABLED"
  #     Targets:
  #       - RoleArn: !Sub arn:aws:iam::${AWS::AccountId}:role/CodePipeline-Service
  #         Arn: !Sub arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${rCodePipeline}
  #         Id: !Sub "${pProduct}_Initial_CodePipeline_V1"   
