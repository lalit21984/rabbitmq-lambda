AWSTemplateFormatVersion: '2010-09-09'
Description: Builds a CI/CD Pipeline to deploy a configurable RabbitMQ (Across Multiple Accounts)

Parameters:
  pName:
    Type: String
    Default: "AutoRabbit"
  pType:
    Type: String
    Description: Team Name
    Default: "Beta"
  pBranchName:
    Type: String
    Description: Branch Name to Deploy
    Default: main
  pTemplatePath: 
    Type: String
    Default: 'app/cloudformation.yaml'
    Description: Path to the template to deploy from the source or build artifact
  pConfigurationPathDev: 
    Type: String
    Default: 'app/configuration-dev.json'
    Description: (Optional) CloudFormation Configuration file for Dev
  pRegion1Name:
    Type: String
    Default: 'us-east-1'
  
  # Override this
  pCodePipelineRoleName:
    Type: String
    Default: RabbitCodePipelineRole
  pVPCId:
    Description: VPC ID
    Type: String
    #Default: 'vpc-0558302bd00b82413'
  pAppSubnetCIDR1:
    Description: An Array of the Intranet Subnet IDs
    Type: String
    #Default: '10.0.128.0/20'
  # pAppSubnetCIDR2:
  #   Description: An Array of the Intranet Subnet IDs
  #   Type: String
  # pAppSubnetCIDR3:
  #   Description: An Array of the Intranet Subnet IDs
  #   Type: String
  pAppSubnet1Id:
    Type: String
    Description: AppSubnet1 ID
    # Default: 'subnet-036443d9dc9f4edff'
  # pAppSubnet2Id:
  #   Type: String
  #   Description: AppSubnet2 ID
  #   Default: 'None'
  # pAppSubnet3Id:
  #   Type: String
  #   Description: AppSubnet3 ID
  #   Default: 'None'
  pInstanceCount:
    Type: String
    Description: Instance Count for EC2 ASG
    Default: '1'
  pInstanceType:
    Type: String
    Description: Instance size for app
    Default: t2.micro

  pAdminUsername:
    Description: The admin username for RabbitMQ (Can't contain commas, colons, equals signs, or spaces)
    Type: String
    Default: rabbit-admin
    MinLength: '12'


Resources:

  rS3KMSKey:
    Type: AWS::KMS::Key
    Properties:
      KeyPolicy:
        Version: 2012-10-17
        Id: key-s3
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:root'
            Action: 'kms:*'
            Resource: '*'
  
  rS3KMSKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: alias/rabbit-storage-key
      TargetKeyId: !Ref rS3KMSKey

  rS3RabbitStorageBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
        - ServerSideEncryptionByDefault:
            KMSMasterKeyID: !Sub 'arn:aws:kms:${AWS::Region}:${AWS::AccountId}:${rS3KMSKeyAlias}'
            SSEAlgorithm: 'aws:kms'

  rCodePipelineRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Ref pCodePipelineRoleName
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
                - cloudformation.amazonaws.com
                - codebuild.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: '*'
                Resource: '*'

  rCodeRepo:
    Type: AWS::CodeCommit::Repository
    Properties:
      RepositoryName: RabbitRepo
      # Triggers:
      #   - Name: DefaultTrigger
      #     Branches:
      #     - development
      #     DestinationArn: !Sub arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${pName}-${pType}-${pBranchName}
      #     Events:
      #     - all

  rCodeBuildLambdaCodeProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${pName}-build-LambdaCode-${pBranchName}
      Description: This project will be used for Deploying the Lambda Code for RabbitMQ
      ServiceRole: !Ref rCodePipelineRole
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:5.0
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: CODE_BUCKET_R1
            Value: !Ref rS3RabbitStorageBucket
          - Name: BUCKET_PREFIX
            Value: !Ref pName
          - Name: KMS_ARN_R1
            Value: !Ref rS3KMSKey
      Source:
        Type: CODEPIPELINE
        BuildSpec: lambdabuildspec.yaml
      TimeoutInMinutes: 10
      # EncryptionKey: !Ref rS3KMSKey
      ResourceAccessRole: !Ref rCodePipelineRole
  
  rCodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RestartExecutionOnUpdate: True
      ArtifactStores:
        - Region: !Ref pRegion1Name
          ArtifactStore:
            EncryptionKey:
              Id: !Ref rS3KMSKey
              Type: KMS
            Location: !Ref rS3RabbitStorageBucket
            Type: S3
      Name: !Sub ${pName}-${pType}-${pBranchName}
      RoleArn: !Sub ${rCodePipelineRole.Arn}
      Stages:
        - Name: Source
          Actions:
            - Name: TemplateSource
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeCommit
                Version: "1"
              Configuration:
                BranchName: !Ref pBranchName
                RepositoryName: !Sub ${rCodeRepo.Name}
                PollForSourceChanges: false
              OutputArtifacts:
                - Name: Source
              RunOrder: 1
        - Name: BuildAndPackage
          Actions:
            - Name: CodeBuild-ZipUploadCode
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Configuration:
                ProjectName: !Ref rCodeBuildLambdaCodeProject
              InputArtifacts:
                - Name: Source
              OutputArtifacts:
                - Name: Build-LambdaCode
              RunOrder: 1
        - Name: !Sub ${pType}-Dev
          Actions:
            - Name: !Sub Deploy_Dev-${pRegion1Name}
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                RoleArn: !Sub arn:aws:iam::${AWS::AccountId}:role/${rCodePipelineRole}
                StackName: !Sub ${pName}-${pType}
                ParameterOverrides: !Sub |
                  {
                    "pLambdaCodeBucket":"${rS3RabbitStorageBucket}",
                    "pObjectVersion":{"Fn::GetParam":["Build-LambdaCode","output.json","oObjectVersionR1"]},
                    "pCodePipelineRoleName":"${pCodePipelineRoleName}",
                    "pVPCId":"${pVPCId}",
                    "pAppSubnetCIDR1":"${pAppSubnetCIDR1}",
                    "pAppSubnet1Id":"${pAppSubnet1Id}",
                    "pInstanceCount":"${pInstanceCount}",
                    "pInstanceType":"${pInstanceType}",
                    "pAdminUsername":"${pAdminUsername}"
                  }
                TemplatePath: !Sub Source::${pTemplatePath}
                # TemplateConfiguration: !Sub Source::${pConfigurationPathDev}
                OutputFileName: Outputs-Dev.json
              InputArtifacts:
                - Name: Source
                - Name: Build-LambdaCode
              OutputArtifacts:
                - Name: Outputs-Dev
              RoleArn: !Sub arn:aws:iam::${AWS::AccountId}:role/${rCodePipelineRole}
              Region: !Ref pRegion1Name
              RunOrder: 1

  # # -------------------------------------------
  # # CloudWatch Event
  # # -------------------------------------------
  # rInitiatePipelineEvent:
  #   Type: AWS::Events::Rule
  #   Properties:
  #     Description: 'Amazon CloudWatch Events rule to automatically start your pipeline when a change occurs to a CodeCommit Repository'
  #     EventPattern:
  #       source:
  #         - aws.codecommit
  #       detail-type:
  #         - "CodeCommit Repository State Change"
  #       resources:
  #         - !Sub arn:aws:codecommit:${pRegion1Name}:${AWS::AccountId}:${pName}
  #       detail:
  #         referenceType:
  #           - branch
  #         referenceName:
  #           - !Ref pBranchName
  #     Name: !Sub ${pName}-${pType}-f-${pBranchName}
  #     State: "ENABLED"
  #     Targets:
  #       - RoleArn: !Sub arn:aws:iam::${AWS::AccountId}:role/CodePipeline-Service
  #         Arn: !Sub arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${rCodePipeline}
  #         Id: !Sub "${pName}_Initial_CodePipeline_V1"   